% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkStatus.R
\name{checkStatus}
\alias{checkStatus}
\title{Check object status}
\usage{
checkStatus(id, token, fields = "effective_status")
}
\arguments{
\item{id}{The id of the campaign, adset or ad you want to retrieve
(Required), see 
\href{https://www.facebook.com/business/help/1492627900875762}{how to find yours}.}

\item{token}{A valid token as returned by \code{\link{fbAuthenticate}}
or a short-term token from 
\href{https://developers.facebook.com/tools/explorer}{facebook Graph API Explorer}.}

\item{fields}{default (\code{"effective_status"}) 
returns the most popular ones. Run \code{\link{findFields}} 
to see all valid fields.}
}
\description{
Returns effective as well as configured status and created time, name, account id of object requested (campaign, adset or ad).
}
\details{
\itemize{
\item \code{configured_status}: The configured status of the object (campaign, adset or ad). If object is campaign and this status is \code{PAUSED}, all its active ad sets and ads will be paused and have an effective status \code{CAMPAIGN_PAUSED}.
\item \code{effective_status} The effective status of this campaign/adset/ad; \code{enum {ACTIVE, PAUSED, DELETED, PENDING_REVIEW, DISAPPROVED, PREAPPROVED, PENDING_BILLING_INFO, CAMPAIGN_PAUSED, ARCHIVED, ADSET_PAUSED}}
}
}
\examples{
\dontrun{
# set token
TK <- "XXXXXXXXXXXXXXXX"

# get information on account
ads <- grabAds(account.id = "act_123456789012345", token = TK)

# loop through ads to find active one (to then get data)
i <- 1

while (status != "ACTIVE"){

   # check status
   status <- checkStatus(ads$id[i], TK)[,effective_status]

   # iterate
   i <- i + 1

   # stop if all ads gone through
   if(i == nrow(ads)) stop("No ACTIVE ads found", call. = FALSE)
}

# exctract active ad
active_ad <- ad[i,]

# get data
ad_data <- getAd(active_ad)
}

}
\author{
John Coene \email{john.coene@cmcm.com}
}
\seealso{
\code{\link{grabAds}}
}

